/** 
 * 
 */
package SARL.agents

import SARL.capacities.LightManagementCapacity
import io.sarl.core.Logging
import SARL.agents.LightStatus
import SARL.agents.LightAgent

/** 
 * @author ELHAJJOUT
 * 
 */
skill LightSkill implements LightManagementCapacity {
	uses Logging
	var owner : LightAgent
	new (owner : LightAgent) {
		this.owner = owner
	}
	def install {
		
		// Function invoked when the skill is installed in the owner.
		// You should put all the initialization statements in this block of code.
		info("Installing the skill")
		assert getOwner !== null
		this.owner = getOwner as LightAgent
		
	}

	def prepareUninstallation {
		// Function invoked when the skill is preparing to be uninstalled from the owner, but before the owner is destroyed.
		// You should put all the resource release statements that should be executed before the owner is destroyed.
		info("Preparing the uninstallation of the skill")
	}

	def uninstall {
		// Function invoked when the skill is uninstalled from the owner, and after the owner is destroyed.
		// You should put all the resource release statements in this block of code.
		info("Uninstalling the skill")
	}

	@SuppressWarnings("potential_field_synchronization_problem")
	override getStatus : LightStatus {
		assert owner !== null
		return owner.getStatus()
	}

	override changeColor(newColor : LightStatus) {
		
	}
}
